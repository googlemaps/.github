// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/waypoint.proto

package com.google.maps.routes.v1;

/**
 * <pre>
 * Encapsulates a location (a geographic point, and an optional heading).
 * </pre>
 *
 * Protobuf type {@code google.maps.routes.v1.Location}
 */
public  final class Location extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.routes.v1.Location)
    LocationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Location.newBuilder() to construct.
  private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Location() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Location();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Location(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.type.LatLng.Builder subBuilder = null;
            if (latLng_ != null) {
              subBuilder = latLng_.toBuilder();
            }
            latLng_ = input.readMessage(com.google.type.LatLng.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(latLng_);
              latLng_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (heading_ != null) {
              subBuilder = heading_.toBuilder();
            }
            heading_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(heading_);
              heading_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.routes.v1.WaypointProto.internal_static_google_maps_routes_v1_Location_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.routes.v1.WaypointProto.internal_static_google_maps_routes_v1_Location_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.routes.v1.Location.class, com.google.maps.routes.v1.Location.Builder.class);
  }

  public static final int LAT_LNG_FIELD_NUMBER = 1;
  private com.google.type.LatLng latLng_;
  /**
   * <pre>
   * The waypoint's geographic coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng lat_lng = 1;</code>
   * @return Whether the latLng field is set.
   */
  public boolean hasLatLng() {
    return latLng_ != null;
  }
  /**
   * <pre>
   * The waypoint's geographic coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng lat_lng = 1;</code>
   * @return The latLng.
   */
  public com.google.type.LatLng getLatLng() {
    return latLng_ == null ? com.google.type.LatLng.getDefaultInstance() : latLng_;
  }
  /**
   * <pre>
   * The waypoint's geographic coordinates.
   * </pre>
   *
   * <code>.google.type.LatLng lat_lng = 1;</code>
   */
  public com.google.type.LatLngOrBuilder getLatLngOrBuilder() {
    return getLatLng();
  }

  public static final int HEADING_FIELD_NUMBER = 2;
  private com.google.protobuf.Int32Value heading_;
  /**
   * <pre>
   * The compass heading associated with the direction of the flow of traffic.
   * This value is used to specify the side of the road to use for pickup and
   * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
   * of due North, 90 specifies a heading of due East, etc. You can use this
   * field only for `DRIVE` and `TWO_WHEELER` travel modes.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value heading = 2;</code>
   * @return Whether the heading field is set.
   */
  public boolean hasHeading() {
    return heading_ != null;
  }
  /**
   * <pre>
   * The compass heading associated with the direction of the flow of traffic.
   * This value is used to specify the side of the road to use for pickup and
   * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
   * of due North, 90 specifies a heading of due East, etc. You can use this
   * field only for `DRIVE` and `TWO_WHEELER` travel modes.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value heading = 2;</code>
   * @return The heading.
   */
  public com.google.protobuf.Int32Value getHeading() {
    return heading_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : heading_;
  }
  /**
   * <pre>
   * The compass heading associated with the direction of the flow of traffic.
   * This value is used to specify the side of the road to use for pickup and
   * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
   * of due North, 90 specifies a heading of due East, etc. You can use this
   * field only for `DRIVE` and `TWO_WHEELER` travel modes.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value heading = 2;</code>
   */
  public com.google.protobuf.Int32ValueOrBuilder getHeadingOrBuilder() {
    return getHeading();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (latLng_ != null) {
      output.writeMessage(1, getLatLng());
    }
    if (heading_ != null) {
      output.writeMessage(2, getHeading());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (latLng_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLatLng());
    }
    if (heading_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getHeading());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.routes.v1.Location)) {
      return super.equals(obj);
    }
    com.google.maps.routes.v1.Location other = (com.google.maps.routes.v1.Location) obj;

    if (hasLatLng() != other.hasLatLng()) return false;
    if (hasLatLng()) {
      if (!getLatLng()
          .equals(other.getLatLng())) return false;
    }
    if (hasHeading() != other.hasHeading()) return false;
    if (hasHeading()) {
      if (!getHeading()
          .equals(other.getHeading())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLatLng()) {
      hash = (37 * hash) + LAT_LNG_FIELD_NUMBER;
      hash = (53 * hash) + getLatLng().hashCode();
    }
    if (hasHeading()) {
      hash = (37 * hash) + HEADING_FIELD_NUMBER;
      hash = (53 * hash) + getHeading().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.routes.v1.Location parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.Location parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.Location parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.routes.v1.Location parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.Location parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.Location parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.routes.v1.Location prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Encapsulates a location (a geographic point, and an optional heading).
   * </pre>
   *
   * Protobuf type {@code google.maps.routes.v1.Location}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.routes.v1.Location)
      com.google.maps.routes.v1.LocationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.routes.v1.WaypointProto.internal_static_google_maps_routes_v1_Location_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.routes.v1.WaypointProto.internal_static_google_maps_routes_v1_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.routes.v1.Location.class, com.google.maps.routes.v1.Location.Builder.class);
    }

    // Construct using com.google.maps.routes.v1.Location.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (latLngBuilder_ == null) {
        latLng_ = null;
      } else {
        latLng_ = null;
        latLngBuilder_ = null;
      }
      if (headingBuilder_ == null) {
        heading_ = null;
      } else {
        heading_ = null;
        headingBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.routes.v1.WaypointProto.internal_static_google_maps_routes_v1_Location_descriptor;
    }

    @java.lang.Override
    public com.google.maps.routes.v1.Location getDefaultInstanceForType() {
      return com.google.maps.routes.v1.Location.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.routes.v1.Location build() {
      com.google.maps.routes.v1.Location result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.routes.v1.Location buildPartial() {
      com.google.maps.routes.v1.Location result = new com.google.maps.routes.v1.Location(this);
      if (latLngBuilder_ == null) {
        result.latLng_ = latLng_;
      } else {
        result.latLng_ = latLngBuilder_.build();
      }
      if (headingBuilder_ == null) {
        result.heading_ = heading_;
      } else {
        result.heading_ = headingBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.routes.v1.Location) {
        return mergeFrom((com.google.maps.routes.v1.Location)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.routes.v1.Location other) {
      if (other == com.google.maps.routes.v1.Location.getDefaultInstance()) return this;
      if (other.hasLatLng()) {
        mergeLatLng(other.getLatLng());
      }
      if (other.hasHeading()) {
        mergeHeading(other.getHeading());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.maps.routes.v1.Location parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.maps.routes.v1.Location) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.type.LatLng latLng_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> latLngBuilder_;
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     * @return Whether the latLng field is set.
     */
    public boolean hasLatLng() {
      return latLngBuilder_ != null || latLng_ != null;
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     * @return The latLng.
     */
    public com.google.type.LatLng getLatLng() {
      if (latLngBuilder_ == null) {
        return latLng_ == null ? com.google.type.LatLng.getDefaultInstance() : latLng_;
      } else {
        return latLngBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public Builder setLatLng(com.google.type.LatLng value) {
      if (latLngBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        latLng_ = value;
        onChanged();
      } else {
        latLngBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public Builder setLatLng(
        com.google.type.LatLng.Builder builderForValue) {
      if (latLngBuilder_ == null) {
        latLng_ = builderForValue.build();
        onChanged();
      } else {
        latLngBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public Builder mergeLatLng(com.google.type.LatLng value) {
      if (latLngBuilder_ == null) {
        if (latLng_ != null) {
          latLng_ =
            com.google.type.LatLng.newBuilder(latLng_).mergeFrom(value).buildPartial();
        } else {
          latLng_ = value;
        }
        onChanged();
      } else {
        latLngBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public Builder clearLatLng() {
      if (latLngBuilder_ == null) {
        latLng_ = null;
        onChanged();
      } else {
        latLng_ = null;
        latLngBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public com.google.type.LatLng.Builder getLatLngBuilder() {
      
      onChanged();
      return getLatLngFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    public com.google.type.LatLngOrBuilder getLatLngOrBuilder() {
      if (latLngBuilder_ != null) {
        return latLngBuilder_.getMessageOrBuilder();
      } else {
        return latLng_ == null ?
            com.google.type.LatLng.getDefaultInstance() : latLng_;
      }
    }
    /**
     * <pre>
     * The waypoint's geographic coordinates.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder> 
        getLatLngFieldBuilder() {
      if (latLngBuilder_ == null) {
        latLngBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder>(
                getLatLng(),
                getParentForChildren(),
                isClean());
        latLng_ = null;
      }
      return latLngBuilder_;
    }

    private com.google.protobuf.Int32Value heading_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> headingBuilder_;
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     * @return Whether the heading field is set.
     */
    public boolean hasHeading() {
      return headingBuilder_ != null || heading_ != null;
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     * @return The heading.
     */
    public com.google.protobuf.Int32Value getHeading() {
      if (headingBuilder_ == null) {
        return heading_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : heading_;
      } else {
        return headingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public Builder setHeading(com.google.protobuf.Int32Value value) {
      if (headingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        heading_ = value;
        onChanged();
      } else {
        headingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public Builder setHeading(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (headingBuilder_ == null) {
        heading_ = builderForValue.build();
        onChanged();
      } else {
        headingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public Builder mergeHeading(com.google.protobuf.Int32Value value) {
      if (headingBuilder_ == null) {
        if (heading_ != null) {
          heading_ =
            com.google.protobuf.Int32Value.newBuilder(heading_).mergeFrom(value).buildPartial();
        } else {
          heading_ = value;
        }
        onChanged();
      } else {
        headingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public Builder clearHeading() {
      if (headingBuilder_ == null) {
        heading_ = null;
        onChanged();
      } else {
        heading_ = null;
        headingBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public com.google.protobuf.Int32Value.Builder getHeadingBuilder() {
      
      onChanged();
      return getHeadingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getHeadingOrBuilder() {
      if (headingBuilder_ != null) {
        return headingBuilder_.getMessageOrBuilder();
      } else {
        return heading_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : heading_;
      }
    }
    /**
     * <pre>
     * The compass heading associated with the direction of the flow of traffic.
     * This value is used to specify the side of the road to use for pickup and
     * drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
     * of due North, 90 specifies a heading of due East, etc. You can use this
     * field only for `DRIVE` and `TWO_WHEELER` travel modes.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value heading = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getHeadingFieldBuilder() {
      if (headingBuilder_ == null) {
        headingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getHeading(),
                getParentForChildren(),
                isClean());
        heading_ = null;
      }
      return headingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.routes.v1.Location)
  }

  // @@protoc_insertion_point(class_scope:google.maps.routes.v1.Location)
  private static final com.google.maps.routes.v1.Location DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.routes.v1.Location();
  }

  public static com.google.maps.routes.v1.Location getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Location>
      PARSER = new com.google.protobuf.AbstractParser<Location>() {
    @java.lang.Override
    public Location parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Location(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Location> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Location> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.routes.v1.Location getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

