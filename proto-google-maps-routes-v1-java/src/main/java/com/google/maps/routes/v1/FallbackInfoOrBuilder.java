// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/compute_routes_response.proto

package com.google.maps.routes.v1;

public interface FallbackInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.maps.routes.v1.FallbackInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Routing mode used for the response. If fallback was triggered, the mode
   * may be different from routing preference set in the original client
   * request.
   * </pre>
   *
   * <code>.google.maps.routes.v1.FallbackRoutingMode routing_mode = 1;</code>
   * @return The enum numeric value on the wire for routingMode.
   */
  int getRoutingModeValue();
  /**
   * <pre>
   * Routing mode used for the response. If fallback was triggered, the mode
   * may be different from routing preference set in the original client
   * request.
   * </pre>
   *
   * <code>.google.maps.routes.v1.FallbackRoutingMode routing_mode = 1;</code>
   * @return The routingMode.
   */
  com.google.maps.routes.v1.FallbackRoutingMode getRoutingMode();

  /**
   * <pre>
   * The reason why fallback response was used instead of the original response.
   * This field is only populated when the fallback mode is triggered and the
   * fallback response is returned.
   * </pre>
   *
   * <code>.google.maps.routes.v1.FallbackReason reason = 2;</code>
   * @return The enum numeric value on the wire for reason.
   */
  int getReasonValue();
  /**
   * <pre>
   * The reason why fallback response was used instead of the original response.
   * This field is only populated when the fallback mode is triggered and the
   * fallback response is returned.
   * </pre>
   *
   * <code>.google.maps.routes.v1.FallbackReason reason = 2;</code>
   * @return The reason.
   */
  com.google.maps.routes.v1.FallbackReason getReason();
}
