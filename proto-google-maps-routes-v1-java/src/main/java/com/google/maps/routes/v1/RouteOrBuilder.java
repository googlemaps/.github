// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/route.proto

package com.google.maps.routes.v1;

public interface RouteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.maps.routes.v1.Route)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A collection of legs (path segments between waypoints) that make-up the
   * route. Each leg corresponds to the trip between two non-`via` Waypoints.
   * For example, a route with no intermediate waypoints has only one leg. A
   * route that includes one non-`via` intermediate waypoint has two legs. A
   * route that includes one `via` intermediate waypoint has one leg. The order
   * of the legs matches the order of Waypoints from `origin` to `intermediates`
   * to `destination`.
   * </pre>
   *
   * <code>repeated .google.maps.routes.v1.RouteLeg legs = 1;</code>
   */
  java.util.List<com.google.maps.routes.v1.RouteLeg> 
      getLegsList();
  /**
   * <pre>
   * A collection of legs (path segments between waypoints) that make-up the
   * route. Each leg corresponds to the trip between two non-`via` Waypoints.
   * For example, a route with no intermediate waypoints has only one leg. A
   * route that includes one non-`via` intermediate waypoint has two legs. A
   * route that includes one `via` intermediate waypoint has one leg. The order
   * of the legs matches the order of Waypoints from `origin` to `intermediates`
   * to `destination`.
   * </pre>
   *
   * <code>repeated .google.maps.routes.v1.RouteLeg legs = 1;</code>
   */
  com.google.maps.routes.v1.RouteLeg getLegs(int index);
  /**
   * <pre>
   * A collection of legs (path segments between waypoints) that make-up the
   * route. Each leg corresponds to the trip between two non-`via` Waypoints.
   * For example, a route with no intermediate waypoints has only one leg. A
   * route that includes one non-`via` intermediate waypoint has two legs. A
   * route that includes one `via` intermediate waypoint has one leg. The order
   * of the legs matches the order of Waypoints from `origin` to `intermediates`
   * to `destination`.
   * </pre>
   *
   * <code>repeated .google.maps.routes.v1.RouteLeg legs = 1;</code>
   */
  int getLegsCount();
  /**
   * <pre>
   * A collection of legs (path segments between waypoints) that make-up the
   * route. Each leg corresponds to the trip between two non-`via` Waypoints.
   * For example, a route with no intermediate waypoints has only one leg. A
   * route that includes one non-`via` intermediate waypoint has two legs. A
   * route that includes one `via` intermediate waypoint has one leg. The order
   * of the legs matches the order of Waypoints from `origin` to `intermediates`
   * to `destination`.
   * </pre>
   *
   * <code>repeated .google.maps.routes.v1.RouteLeg legs = 1;</code>
   */
  java.util.List<? extends com.google.maps.routes.v1.RouteLegOrBuilder> 
      getLegsOrBuilderList();
  /**
   * <pre>
   * A collection of legs (path segments between waypoints) that make-up the
   * route. Each leg corresponds to the trip between two non-`via` Waypoints.
   * For example, a route with no intermediate waypoints has only one leg. A
   * route that includes one non-`via` intermediate waypoint has two legs. A
   * route that includes one `via` intermediate waypoint has one leg. The order
   * of the legs matches the order of Waypoints from `origin` to `intermediates`
   * to `destination`.
   * </pre>
   *
   * <code>repeated .google.maps.routes.v1.RouteLeg legs = 1;</code>
   */
  com.google.maps.routes.v1.RouteLegOrBuilder getLegsOrBuilder(
      int index);

  /**
   * <pre>
   * The travel distance of the route, in meters.
   * </pre>
   *
   * <code>int32 distance_meters = 2;</code>
   * @return The distanceMeters.
   */
  int getDistanceMeters();

  /**
   * <pre>
   * The length of time needed to navigate the route. If you set the
   * `route_preference` to `TRAFFIC_UNAWARE`, then this value is the same as
   * `static_duration`. If you set the `route_preference` to either
   * `TRAFFIC_AWARE` or `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated
   * taking traffic conditions into account.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 3;</code>
   * @return Whether the duration field is set.
   */
  boolean hasDuration();
  /**
   * <pre>
   * The length of time needed to navigate the route. If you set the
   * `route_preference` to `TRAFFIC_UNAWARE`, then this value is the same as
   * `static_duration`. If you set the `route_preference` to either
   * `TRAFFIC_AWARE` or `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated
   * taking traffic conditions into account.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 3;</code>
   * @return The duration.
   */
  com.google.protobuf.Duration getDuration();
  /**
   * <pre>
   * The length of time needed to navigate the route. If you set the
   * `route_preference` to `TRAFFIC_UNAWARE`, then this value is the same as
   * `static_duration`. If you set the `route_preference` to either
   * `TRAFFIC_AWARE` or `TRAFFIC_AWARE_OPTIMAL`, then this value is calculated
   * taking traffic conditions into account.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getDurationOrBuilder();

  /**
   * <pre>
   * The duration of traveling through the route without taking traffic
   * conditions into consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration static_duration = 4;</code>
   * @return Whether the staticDuration field is set.
   */
  boolean hasStaticDuration();
  /**
   * <pre>
   * The duration of traveling through the route without taking traffic
   * conditions into consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration static_duration = 4;</code>
   * @return The staticDuration.
   */
  com.google.protobuf.Duration getStaticDuration();
  /**
   * <pre>
   * The duration of traveling through the route without taking traffic
   * conditions into consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration static_duration = 4;</code>
   */
  com.google.protobuf.DurationOrBuilder getStaticDurationOrBuilder();

  /**
   * <pre>
   * The overall route polyline. This polyline will be the combined polyline of
   * all `legs`.
   * </pre>
   *
   * <code>.google.maps.routes.v1.Polyline polyline = 5;</code>
   * @return Whether the polyline field is set.
   */
  boolean hasPolyline();
  /**
   * <pre>
   * The overall route polyline. This polyline will be the combined polyline of
   * all `legs`.
   * </pre>
   *
   * <code>.google.maps.routes.v1.Polyline polyline = 5;</code>
   * @return The polyline.
   */
  com.google.maps.routes.v1.Polyline getPolyline();
  /**
   * <pre>
   * The overall route polyline. This polyline will be the combined polyline of
   * all `legs`.
   * </pre>
   *
   * <code>.google.maps.routes.v1.Polyline polyline = 5;</code>
   */
  com.google.maps.routes.v1.PolylineOrBuilder getPolylineOrBuilder();

  /**
   * <pre>
   * A description of the route.
   * </pre>
   *
   * <code>string description = 6;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * A description of the route.
   * </pre>
   *
   * <code>string description = 6;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * An array of warnings to show when displaying the route.
   * </pre>
   *
   * <code>repeated string warnings = 7;</code>
   * @return A list containing the warnings.
   */
  java.util.List<java.lang.String>
      getWarningsList();
  /**
   * <pre>
   * An array of warnings to show when displaying the route.
   * </pre>
   *
   * <code>repeated string warnings = 7;</code>
   * @return The count of warnings.
   */
  int getWarningsCount();
  /**
   * <pre>
   * An array of warnings to show when displaying the route.
   * </pre>
   *
   * <code>repeated string warnings = 7;</code>
   * @param index The index of the element to return.
   * @return The warnings at the given index.
   */
  java.lang.String getWarnings(int index);
  /**
   * <pre>
   * An array of warnings to show when displaying the route.
   * </pre>
   *
   * <code>repeated string warnings = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the warnings at the given index.
   */
  com.google.protobuf.ByteString
      getWarningsBytes(int index);

  /**
   * <pre>
   * The viewport bounding box of the polyline.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 8;</code>
   * @return Whether the viewport field is set.
   */
  boolean hasViewport();
  /**
   * <pre>
   * The viewport bounding box of the polyline.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 8;</code>
   * @return The viewport.
   */
  com.google.geo.type.Viewport getViewport();
  /**
   * <pre>
   * The viewport bounding box of the polyline.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 8;</code>
   */
  com.google.geo.type.ViewportOrBuilder getViewportOrBuilder();

  /**
   * <pre>
   * Additional information about the route.
   * </pre>
   *
   * <code>.google.maps.routes.v1.RouteTravelAdvisory travel_advisory = 9;</code>
   * @return Whether the travelAdvisory field is set.
   */
  boolean hasTravelAdvisory();
  /**
   * <pre>
   * Additional information about the route.
   * </pre>
   *
   * <code>.google.maps.routes.v1.RouteTravelAdvisory travel_advisory = 9;</code>
   * @return The travelAdvisory.
   */
  com.google.maps.routes.v1.RouteTravelAdvisory getTravelAdvisory();
  /**
   * <pre>
   * Additional information about the route.
   * </pre>
   *
   * <code>.google.maps.routes.v1.RouteTravelAdvisory travel_advisory = 9;</code>
   */
  com.google.maps.routes.v1.RouteTravelAdvisoryOrBuilder getTravelAdvisoryOrBuilder();
}
