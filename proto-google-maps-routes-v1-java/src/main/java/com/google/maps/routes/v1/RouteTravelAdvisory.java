// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/route.proto

package com.google.maps.routes.v1;

/**
 * <pre>
 * Encapsulates the additional information that the user should be informed
 * about, such as possible traffic zone restriction etc.
 * </pre>
 *
 * Protobuf type {@code google.maps.routes.v1.RouteTravelAdvisory}
 */
public  final class RouteTravelAdvisory extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.maps.routes.v1.RouteTravelAdvisory)
    RouteTravelAdvisoryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RouteTravelAdvisory.newBuilder() to construct.
  private RouteTravelAdvisory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RouteTravelAdvisory() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RouteTravelAdvisory();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RouteTravelAdvisory(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.maps.routes.v1.TrafficRestriction.Builder subBuilder = null;
            if (trafficRestriction_ != null) {
              subBuilder = trafficRestriction_.toBuilder();
            }
            trafficRestriction_ = input.readMessage(com.google.maps.routes.v1.TrafficRestriction.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(trafficRestriction_);
              trafficRestriction_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.maps.routes.v1.TollInfo.Builder subBuilder = null;
            if (tollInfo_ != null) {
              subBuilder = tollInfo_.toBuilder();
            }
            tollInfo_ = input.readMessage(com.google.maps.routes.v1.TollInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tollInfo_);
              tollInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.maps.routes.v1.RouteProto.internal_static_google_maps_routes_v1_RouteTravelAdvisory_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.routes.v1.RouteProto.internal_static_google_maps_routes_v1_RouteTravelAdvisory_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.routes.v1.RouteTravelAdvisory.class, com.google.maps.routes.v1.RouteTravelAdvisory.Builder.class);
  }

  public static final int TRAFFIC_RESTRICTION_FIELD_NUMBER = 1;
  private com.google.maps.routes.v1.TrafficRestriction trafficRestriction_;
  /**
   * <pre>
   * The traffic restriction that applies to the route. A vehicle that is
   * subject to the restriction is not allowed to travel on the route. As of
   * October 2019, only Jakarta, Indonesia takes into consideration.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
   * @return Whether the trafficRestriction field is set.
   */
  public boolean hasTrafficRestriction() {
    return trafficRestriction_ != null;
  }
  /**
   * <pre>
   * The traffic restriction that applies to the route. A vehicle that is
   * subject to the restriction is not allowed to travel on the route. As of
   * October 2019, only Jakarta, Indonesia takes into consideration.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
   * @return The trafficRestriction.
   */
  public com.google.maps.routes.v1.TrafficRestriction getTrafficRestriction() {
    return trafficRestriction_ == null ? com.google.maps.routes.v1.TrafficRestriction.getDefaultInstance() : trafficRestriction_;
  }
  /**
   * <pre>
   * The traffic restriction that applies to the route. A vehicle that is
   * subject to the restriction is not allowed to travel on the route. As of
   * October 2019, only Jakarta, Indonesia takes into consideration.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
   */
  public com.google.maps.routes.v1.TrafficRestrictionOrBuilder getTrafficRestrictionOrBuilder() {
    return getTrafficRestriction();
  }

  public static final int TOLL_INFO_FIELD_NUMBER = 2;
  private com.google.maps.routes.v1.TollInfo tollInfo_;
  /**
   * <pre>
   * Populated if this journey contains toll roads.
   * This is an aggregation of the toll information for each RouteLeg into a
   * single price per every relevant currency.
   * If this field is set but the estimated_price subfield is not populated,
   * we know that road contains tolls but we do not know the exact price.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
   * @return Whether the tollInfo field is set.
   */
  public boolean hasTollInfo() {
    return tollInfo_ != null;
  }
  /**
   * <pre>
   * Populated if this journey contains toll roads.
   * This is an aggregation of the toll information for each RouteLeg into a
   * single price per every relevant currency.
   * If this field is set but the estimated_price subfield is not populated,
   * we know that road contains tolls but we do not know the exact price.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
   * @return The tollInfo.
   */
  public com.google.maps.routes.v1.TollInfo getTollInfo() {
    return tollInfo_ == null ? com.google.maps.routes.v1.TollInfo.getDefaultInstance() : tollInfo_;
  }
  /**
   * <pre>
   * Populated if this journey contains toll roads.
   * This is an aggregation of the toll information for each RouteLeg into a
   * single price per every relevant currency.
   * If this field is set but the estimated_price subfield is not populated,
   * we know that road contains tolls but we do not know the exact price.
   * </pre>
   *
   * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
   */
  public com.google.maps.routes.v1.TollInfoOrBuilder getTollInfoOrBuilder() {
    return getTollInfo();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (trafficRestriction_ != null) {
      output.writeMessage(1, getTrafficRestriction());
    }
    if (tollInfo_ != null) {
      output.writeMessage(2, getTollInfo());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (trafficRestriction_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTrafficRestriction());
    }
    if (tollInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTollInfo());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.maps.routes.v1.RouteTravelAdvisory)) {
      return super.equals(obj);
    }
    com.google.maps.routes.v1.RouteTravelAdvisory other = (com.google.maps.routes.v1.RouteTravelAdvisory) obj;

    if (hasTrafficRestriction() != other.hasTrafficRestriction()) return false;
    if (hasTrafficRestriction()) {
      if (!getTrafficRestriction()
          .equals(other.getTrafficRestriction())) return false;
    }
    if (hasTollInfo() != other.hasTollInfo()) return false;
    if (hasTollInfo()) {
      if (!getTollInfo()
          .equals(other.getTollInfo())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTrafficRestriction()) {
      hash = (37 * hash) + TRAFFIC_RESTRICTION_FIELD_NUMBER;
      hash = (53 * hash) + getTrafficRestriction().hashCode();
    }
    if (hasTollInfo()) {
      hash = (37 * hash) + TOLL_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getTollInfo().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.maps.routes.v1.RouteTravelAdvisory parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.maps.routes.v1.RouteTravelAdvisory prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Encapsulates the additional information that the user should be informed
   * about, such as possible traffic zone restriction etc.
   * </pre>
   *
   * Protobuf type {@code google.maps.routes.v1.RouteTravelAdvisory}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.maps.routes.v1.RouteTravelAdvisory)
      com.google.maps.routes.v1.RouteTravelAdvisoryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.maps.routes.v1.RouteProto.internal_static_google_maps_routes_v1_RouteTravelAdvisory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.routes.v1.RouteProto.internal_static_google_maps_routes_v1_RouteTravelAdvisory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.routes.v1.RouteTravelAdvisory.class, com.google.maps.routes.v1.RouteTravelAdvisory.Builder.class);
    }

    // Construct using com.google.maps.routes.v1.RouteTravelAdvisory.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (trafficRestrictionBuilder_ == null) {
        trafficRestriction_ = null;
      } else {
        trafficRestriction_ = null;
        trafficRestrictionBuilder_ = null;
      }
      if (tollInfoBuilder_ == null) {
        tollInfo_ = null;
      } else {
        tollInfo_ = null;
        tollInfoBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.maps.routes.v1.RouteProto.internal_static_google_maps_routes_v1_RouteTravelAdvisory_descriptor;
    }

    @java.lang.Override
    public com.google.maps.routes.v1.RouteTravelAdvisory getDefaultInstanceForType() {
      return com.google.maps.routes.v1.RouteTravelAdvisory.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.routes.v1.RouteTravelAdvisory build() {
      com.google.maps.routes.v1.RouteTravelAdvisory result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.routes.v1.RouteTravelAdvisory buildPartial() {
      com.google.maps.routes.v1.RouteTravelAdvisory result = new com.google.maps.routes.v1.RouteTravelAdvisory(this);
      if (trafficRestrictionBuilder_ == null) {
        result.trafficRestriction_ = trafficRestriction_;
      } else {
        result.trafficRestriction_ = trafficRestrictionBuilder_.build();
      }
      if (tollInfoBuilder_ == null) {
        result.tollInfo_ = tollInfo_;
      } else {
        result.tollInfo_ = tollInfoBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.routes.v1.RouteTravelAdvisory) {
        return mergeFrom((com.google.maps.routes.v1.RouteTravelAdvisory)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.routes.v1.RouteTravelAdvisory other) {
      if (other == com.google.maps.routes.v1.RouteTravelAdvisory.getDefaultInstance()) return this;
      if (other.hasTrafficRestriction()) {
        mergeTrafficRestriction(other.getTrafficRestriction());
      }
      if (other.hasTollInfo()) {
        mergeTollInfo(other.getTollInfo());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.maps.routes.v1.RouteTravelAdvisory parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.maps.routes.v1.RouteTravelAdvisory) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.maps.routes.v1.TrafficRestriction trafficRestriction_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.maps.routes.v1.TrafficRestriction, com.google.maps.routes.v1.TrafficRestriction.Builder, com.google.maps.routes.v1.TrafficRestrictionOrBuilder> trafficRestrictionBuilder_;
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     * @return Whether the trafficRestriction field is set.
     */
    public boolean hasTrafficRestriction() {
      return trafficRestrictionBuilder_ != null || trafficRestriction_ != null;
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     * @return The trafficRestriction.
     */
    public com.google.maps.routes.v1.TrafficRestriction getTrafficRestriction() {
      if (trafficRestrictionBuilder_ == null) {
        return trafficRestriction_ == null ? com.google.maps.routes.v1.TrafficRestriction.getDefaultInstance() : trafficRestriction_;
      } else {
        return trafficRestrictionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public Builder setTrafficRestriction(com.google.maps.routes.v1.TrafficRestriction value) {
      if (trafficRestrictionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        trafficRestriction_ = value;
        onChanged();
      } else {
        trafficRestrictionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public Builder setTrafficRestriction(
        com.google.maps.routes.v1.TrafficRestriction.Builder builderForValue) {
      if (trafficRestrictionBuilder_ == null) {
        trafficRestriction_ = builderForValue.build();
        onChanged();
      } else {
        trafficRestrictionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public Builder mergeTrafficRestriction(com.google.maps.routes.v1.TrafficRestriction value) {
      if (trafficRestrictionBuilder_ == null) {
        if (trafficRestriction_ != null) {
          trafficRestriction_ =
            com.google.maps.routes.v1.TrafficRestriction.newBuilder(trafficRestriction_).mergeFrom(value).buildPartial();
        } else {
          trafficRestriction_ = value;
        }
        onChanged();
      } else {
        trafficRestrictionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public Builder clearTrafficRestriction() {
      if (trafficRestrictionBuilder_ == null) {
        trafficRestriction_ = null;
        onChanged();
      } else {
        trafficRestriction_ = null;
        trafficRestrictionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public com.google.maps.routes.v1.TrafficRestriction.Builder getTrafficRestrictionBuilder() {
      
      onChanged();
      return getTrafficRestrictionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    public com.google.maps.routes.v1.TrafficRestrictionOrBuilder getTrafficRestrictionOrBuilder() {
      if (trafficRestrictionBuilder_ != null) {
        return trafficRestrictionBuilder_.getMessageOrBuilder();
      } else {
        return trafficRestriction_ == null ?
            com.google.maps.routes.v1.TrafficRestriction.getDefaultInstance() : trafficRestriction_;
      }
    }
    /**
     * <pre>
     * The traffic restriction that applies to the route. A vehicle that is
     * subject to the restriction is not allowed to travel on the route. As of
     * October 2019, only Jakarta, Indonesia takes into consideration.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TrafficRestriction traffic_restriction = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.maps.routes.v1.TrafficRestriction, com.google.maps.routes.v1.TrafficRestriction.Builder, com.google.maps.routes.v1.TrafficRestrictionOrBuilder> 
        getTrafficRestrictionFieldBuilder() {
      if (trafficRestrictionBuilder_ == null) {
        trafficRestrictionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.routes.v1.TrafficRestriction, com.google.maps.routes.v1.TrafficRestriction.Builder, com.google.maps.routes.v1.TrafficRestrictionOrBuilder>(
                getTrafficRestriction(),
                getParentForChildren(),
                isClean());
        trafficRestriction_ = null;
      }
      return trafficRestrictionBuilder_;
    }

    private com.google.maps.routes.v1.TollInfo tollInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.maps.routes.v1.TollInfo, com.google.maps.routes.v1.TollInfo.Builder, com.google.maps.routes.v1.TollInfoOrBuilder> tollInfoBuilder_;
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     * @return Whether the tollInfo field is set.
     */
    public boolean hasTollInfo() {
      return tollInfoBuilder_ != null || tollInfo_ != null;
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     * @return The tollInfo.
     */
    public com.google.maps.routes.v1.TollInfo getTollInfo() {
      if (tollInfoBuilder_ == null) {
        return tollInfo_ == null ? com.google.maps.routes.v1.TollInfo.getDefaultInstance() : tollInfo_;
      } else {
        return tollInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public Builder setTollInfo(com.google.maps.routes.v1.TollInfo value) {
      if (tollInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tollInfo_ = value;
        onChanged();
      } else {
        tollInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public Builder setTollInfo(
        com.google.maps.routes.v1.TollInfo.Builder builderForValue) {
      if (tollInfoBuilder_ == null) {
        tollInfo_ = builderForValue.build();
        onChanged();
      } else {
        tollInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public Builder mergeTollInfo(com.google.maps.routes.v1.TollInfo value) {
      if (tollInfoBuilder_ == null) {
        if (tollInfo_ != null) {
          tollInfo_ =
            com.google.maps.routes.v1.TollInfo.newBuilder(tollInfo_).mergeFrom(value).buildPartial();
        } else {
          tollInfo_ = value;
        }
        onChanged();
      } else {
        tollInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public Builder clearTollInfo() {
      if (tollInfoBuilder_ == null) {
        tollInfo_ = null;
        onChanged();
      } else {
        tollInfo_ = null;
        tollInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public com.google.maps.routes.v1.TollInfo.Builder getTollInfoBuilder() {
      
      onChanged();
      return getTollInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    public com.google.maps.routes.v1.TollInfoOrBuilder getTollInfoOrBuilder() {
      if (tollInfoBuilder_ != null) {
        return tollInfoBuilder_.getMessageOrBuilder();
      } else {
        return tollInfo_ == null ?
            com.google.maps.routes.v1.TollInfo.getDefaultInstance() : tollInfo_;
      }
    }
    /**
     * <pre>
     * Populated if this journey contains toll roads.
     * This is an aggregation of the toll information for each RouteLeg into a
     * single price per every relevant currency.
     * If this field is set but the estimated_price subfield is not populated,
     * we know that road contains tolls but we do not know the exact price.
     * </pre>
     *
     * <code>.google.maps.routes.v1.TollInfo toll_info = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.maps.routes.v1.TollInfo, com.google.maps.routes.v1.TollInfo.Builder, com.google.maps.routes.v1.TollInfoOrBuilder> 
        getTollInfoFieldBuilder() {
      if (tollInfoBuilder_ == null) {
        tollInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.routes.v1.TollInfo, com.google.maps.routes.v1.TollInfo.Builder, com.google.maps.routes.v1.TollInfoOrBuilder>(
                getTollInfo(),
                getParentForChildren(),
                isClean());
        tollInfo_ = null;
      }
      return tollInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.maps.routes.v1.RouteTravelAdvisory)
  }

  // @@protoc_insertion_point(class_scope:google.maps.routes.v1.RouteTravelAdvisory)
  private static final com.google.maps.routes.v1.RouteTravelAdvisory DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.maps.routes.v1.RouteTravelAdvisory();
  }

  public static com.google.maps.routes.v1.RouteTravelAdvisory getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RouteTravelAdvisory>
      PARSER = new com.google.protobuf.AbstractParser<RouteTravelAdvisory>() {
    @java.lang.Override
    public RouteTravelAdvisory parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RouteTravelAdvisory(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RouteTravelAdvisory> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RouteTravelAdvisory> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.routes.v1.RouteTravelAdvisory getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

