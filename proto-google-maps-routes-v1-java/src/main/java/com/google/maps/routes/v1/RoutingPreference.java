// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/compute_routes_request.proto

package com.google.maps.routes.v1;

/**
 * <pre>
 * A set of values that specify factors to take into consideration when
 * calculating the route.
 * </pre>
 *
 * Protobuf enum {@code google.maps.routes.v1.RoutingPreference}
 */
public enum RoutingPreference
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * No routing preference specified. Default to `TRAFFIC_AWARE`.
   * </pre>
   *
   * <code>ROUTING_PREFERENCE_UNSPECIFIED = 0;</code>
   */
  ROUTING_PREFERENCE_UNSPECIFIED(0),
  /**
   * <pre>
   * Computes routes without taking traffic conditions into consideration.
   * Suitable when traffic conditions don't matter. Using this value produces
   * the lowest latency.
   * </pre>
   *
   * <code>TRAFFIC_UNAWARE = 1;</code>
   */
  TRAFFIC_UNAWARE(1),
  /**
   * <pre>
   * Calculates routes taking traffic conditions into consideration. In contrast
   * to `TRAFFIC_AWARE_OPTIMAL`, some optimizations are applied to significantly
   * reduce latency.
   * </pre>
   *
   * <code>TRAFFIC_AWARE = 2;</code>
   */
  TRAFFIC_AWARE(2),
  /**
   * <pre>
   * Calculates the routes taking traffic conditions into consideration,
   * without applying most performance optimizations. Using this value produces
   * the highest latency.
   * </pre>
   *
   * <code>TRAFFIC_AWARE_OPTIMAL = 3;</code>
   */
  TRAFFIC_AWARE_OPTIMAL(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * No routing preference specified. Default to `TRAFFIC_AWARE`.
   * </pre>
   *
   * <code>ROUTING_PREFERENCE_UNSPECIFIED = 0;</code>
   */
  public static final int ROUTING_PREFERENCE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Computes routes without taking traffic conditions into consideration.
   * Suitable when traffic conditions don't matter. Using this value produces
   * the lowest latency.
   * </pre>
   *
   * <code>TRAFFIC_UNAWARE = 1;</code>
   */
  public static final int TRAFFIC_UNAWARE_VALUE = 1;
  /**
   * <pre>
   * Calculates routes taking traffic conditions into consideration. In contrast
   * to `TRAFFIC_AWARE_OPTIMAL`, some optimizations are applied to significantly
   * reduce latency.
   * </pre>
   *
   * <code>TRAFFIC_AWARE = 2;</code>
   */
  public static final int TRAFFIC_AWARE_VALUE = 2;
  /**
   * <pre>
   * Calculates the routes taking traffic conditions into consideration,
   * without applying most performance optimizations. Using this value produces
   * the highest latency.
   * </pre>
   *
   * <code>TRAFFIC_AWARE_OPTIMAL = 3;</code>
   */
  public static final int TRAFFIC_AWARE_OPTIMAL_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RoutingPreference valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RoutingPreference forNumber(int value) {
    switch (value) {
      case 0: return ROUTING_PREFERENCE_UNSPECIFIED;
      case 1: return TRAFFIC_UNAWARE;
      case 2: return TRAFFIC_AWARE;
      case 3: return TRAFFIC_AWARE_OPTIMAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RoutingPreference>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RoutingPreference> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RoutingPreference>() {
          public RoutingPreference findValueByNumber(int number) {
            return RoutingPreference.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.maps.routes.v1.ComputeRoutesRequestProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final RoutingPreference[] VALUES = values();

  public static RoutingPreference valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RoutingPreference(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.maps.routes.v1.RoutingPreference)
}

